#ifndef FOLLOW_H
#define FOLLOW_H

#include "Token.h"

eTOKENS programFollow[] = { TOKEN_EOF };

eTOKENS globalVarsFollow[] = { TOKEN_INT, TOKEN_FLOAT, TOKEN_VOID };

eTOKENS globalVarsTagFollow[] = { TOKEN_INT, TOKEN_FLOAT, TOKEN_VOID };

eTOKENS varDecFollow[] = { TOKEN_INT, TOKEN_FLOAT, TOKEN_VOID, TOKEN_ID, TOKEN_IF, TOKEN_RETURN, TOKEN_OPEN_CURLY };

eTOKENS varDecTagFollow[] = { TOKEN_INT, TOKEN_FLOAT, TOKEN_VOID, TOKEN_ID, TOKEN_IF, TOKEN_RETURN, TOKEN_OPEN_CURLY };

eTOKENS typeFollow[] = { TOKEN_ID };

eTOKENS dimSizesFollow[] = { TOKEN_CLOSE_BRACKETS };

eTOKENS dimSizesTagFollow[] = { TOKEN_CLOSE_BRACKETS };

eTOKENS funcPredefsFollow[] = { TOKEN_INT, TOKEN_FLOAT, TOKEN_VOID };

eTOKENS funcPredefsTagFollow[] = { TOKEN_SEMICOLON };

eTOKENS funcPrototypeFollow[] = { TOKEN_SEMICOLON, TOKEN_OPEN_CURLY };

eTOKENS funcFullDefs[] = { TOKEN_EOF };

eTOKENS funcFullDefsTag[] = { TOKEN_EOF };

eTOKENS funcWithBodyFollow[] = { TOKEN_VOID, TOKEN_INT, TOKEN_FLOAT, TOKEN_EOF };

eTOKENS returnedTypeFollow[] = { TOKEN_ID };

eTOKENS paramsFollow[] = { TOKEN_CLOSE_PARENTHESES };

eTOKENS paramsListFollow[] = { TOKEN_CLOSE_PARENTHESES };

eTOKENS paramsListTagFollow[] = { TOKEN_CLOSE_PARENTHESES };

eTOKENS paramFollow[] = { TOKEN_CLOSE_PARENTHESES, TOKEN_COMMA };

eTOKENS paramTagFollow[] = { TOKEN_CLOSE_PARENTHESES, TOKEN_COMMA };

eTOKENS compStmtFollow[] = { TOKEN_CLOSE_CURLY, TOKEN_VOID, TOKEN_INT, TOKEN_FLOAT, TOKEN_SEMICOLON, TOKEN_EOF };

eTOKENS varDecListFollow[] = { TOKEN_OPEN_CURLY, TOKEN_ID, TOKEN_IF, TOKEN_RETURN };

eTOKENS varDecListTagFollow[] = { TOKEN_OPEN_CURLY, TOKEN_ID, TOKEN_IF, TOKEN_RETURN };

eTOKENS stmtListFollow[] = { TOKEN_CLOSE_CURLY };

eTOKENS stmtListTagFollow[] = { TOKEN_CLOSE_CURLY };

eTOKENS stmtFollow[] = { TOKEN_CLOSE_CURLY, TOKEN_SEMICOLON };

eTOKENS stmtTagFollow[] = { TOKEN_CLOSE_CURLY, TOKEN_SEMICOLON };

eTOKENS argsFollow[] = { TOKEN_CLOSE_PARENTHESES };

eTOKENS argListFollow[] = { TOKEN_CLOSE_PARENTHESES };

eTOKENS argListTagFollow[] = { TOKEN_CLOSE_PARENTHESES };

eTOKENS returnStmtFollow[] = { TOKEN_SEMICOLON, TOKEN_CLOSE_CURLY };

eTOKENS returnStmtTagFollow[] = { TOKEN_SEMICOLON, TOKEN_CLOSE_CURLY };

eTOKENS exprListFollow[] = { TOKEN_CLOSE_BRACKETS };

eTOKENS exprListTagFollow[] = { TOKEN_CLOSE_BRACKETS };

eTOKENS conditionFollow[] = { TOKEN_CLOSE_PARENTHESES };

eTOKENS exprFollow[] = { TOKEN_CLOSE_BRACKETS, TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_CLOSE_PARENTHESES, TOKEN_CLOSE_CURLY,
							TOKEN_OP_EQUAL, TOKEN_OP_GREAT, TOKEN_OP_GREAT_EQ, TOKEN_OP_LESS, TOKEN_OP_LESS_EQ, TOKEN_OP_INEQUAL };

eTOKENS exprTagFollow[] = { TOKEN_CLOSE_BRACKETS, TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_CLOSE_PARENTHESES, TOKEN_CLOSE_CURLY,
							TOKEN_OP_EQUAL, TOKEN_OP_GREAT, TOKEN_OP_GREAT_EQ, TOKEN_OP_LESS, TOKEN_OP_LESS_EQ, TOKEN_OP_INEQUAL };

eTOKENS termFollow[] = { TOKEN_OP_ADD, TOKEN_CLOSE_BRACKETS, TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_CLOSE_PARENTHESES, TOKEN_CLOSE_CURLY,
							TOKEN_OP_EQUAL,TOKEN_OP_GREAT,TOKEN_OP_GREAT_EQ,TOKEN_OP_LESS,TOKEN_OP_LESS_EQ, TOKEN_OP_INEQUAL };

eTOKENS termTagFollow[] = { TOKEN_OP_ADD, TOKEN_CLOSE_BRACKETS, TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_CLOSE_PARENTHESES, TOKEN_CLOSE_CURLY,
							TOKEN_OP_EQUAL,TOKEN_OP_GREAT,TOKEN_OP_GREAT_EQ,TOKEN_OP_LESS,TOKEN_OP_LESS_EQ, TOKEN_OP_INEQUAL };

eTOKENS factorFollow[] = { TOKEN_OP_MUL, TOKEN_OP_ADD, TOKEN_CLOSE_BRACKETS, TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_CLOSE_PARENTHESES, TOKEN_CLOSE_CURLY,
							TOKEN_OP_EQUAL,TOKEN_OP_GREAT,TOKEN_OP_GREAT_EQ,TOKEN_OP_LESS,TOKEN_OP_LESS_EQ, TOKEN_OP_INEQUAL };

eTOKENS factorTagFollow[] = { TOKEN_OP_MUL, TOKEN_OP_ADD, TOKEN_CLOSE_BRACKETS, TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_CLOSE_PARENTHESES, TOKEN_CLOSE_CURLY,
							TOKEN_OP_EQUAL,TOKEN_OP_GREAT,TOKEN_OP_GREAT_EQ,TOKEN_OP_LESS,TOKEN_OP_LESS_EQ, TOKEN_OP_INEQUAL };

#endif